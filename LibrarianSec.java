package library;



import java.sql.*;
import javax.swing.JOptionPane;
import static library.Admin.CONN_STRING;
import static library.Admin.PASSWORD;
import static library.Admin.USERNAME;
import java.util.*;
import java.text.*;
import java.util.Calendar;
import java.util.Date;
import java.time.*;
import java.time.temporal.ChronoUnit;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author admin
 */
public class LibrarianSec extends javax.swing.JFrame {
    public static final String USERNAME="root";
    public static final String PASSWORD="shweta";
    public static final String CONN_STRING="jdbc:mysql://localhost:3306/library";
    /**
     * Creates new form LibrarianSec
     */
    public LibrarianSec() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton7 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Librarian Section");

        jButton1.setText("Add Books");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("View Books");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Issue Books");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("View Issued Books");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Return Books");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Logout");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jTextArea1.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.light"));
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setToolTipText("");
        jScrollPane1.setViewportView(jTextArea1);

        jButton7.setText("Delete Books");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton7))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(139, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>                        
//Add Books
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        String book=JOptionPane.showInputDialog("Enter Book Name:");
        try
        {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection(CONN_STRING,USERNAME,PASSWORD);
            Statement smt=con.createStatement();
            String s1="insert into books value('"+book+"','true','null','null',00/00/0000);";
            smt.executeUpdate(s1);
            JOptionPane.showMessageDialog(null,book+" added to our library");
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"An error occured"+e);
        }
    }                                        
//View Books
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        jTextArea1.setText("");
        try
        {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection(CONN_STRING,USERNAME,PASSWORD);
            Statement smt=con.createStatement();
            String s1="select * from books";
            ResultSet rs=smt.executeQuery(s1);
            while(rs.next())
            {
                jTextArea1.append(rs.getString(1)+"\n");
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"An error occured"+e);
        }
    }                                        
//Issue Books
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        String book=JOptionPane.showInputDialog("Enter Book Name:");
         try
        {
            
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection(CONN_STRING,USERNAME,PASSWORD);
            Statement smt=con.createStatement();
            String s1="select * from books where BookName='"+book+"' ";
            ResultSet rs=smt.executeQuery(s1);
            rs.next();
            if(rs.getString(2).equals("false"))
            JOptionPane.showMessageDialog(null,"Book already issued");
            else
            {
                
                 String user =JOptionPane.showInputDialog("Enter your name for issue details:");
                

                 JOptionPane.showMessageDialog(null,"Book Issued to "+user); 
                  
                 SimpleDateFormat formDate = new SimpleDateFormat("yyyy/MM/dd");
String strDate = formDate.format(new Date());
System.out.print(strDate);
               
//
   
   
    //Temporary
    SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd");
Calendar cal = Calendar.getInstance();
System.out.println("Current Date: "+sdf.format(cal.getTime()));
//Adding 1 Day to the current date
cal.add(Calendar.DAY_OF_MONTH, 7);  
//Date after adding one day to the current date
String newDate = sdf.format(cal.getTime());  


                  String s2="update books set inbook='false', user='"+user+"',issuedate='"+strDate+"', returndate='"+newDate+"' where bookname='"+book+"' ";
                  smt.executeUpdate(s2);
 
JOptionPane.showMessageDialog(null,"Your return date is "+newDate);
                 
            }
    }                                        
catch(Exception e)
{
    JOptionPane.showMessageDialog(null,"An error occured"+e);
}
    }
//View Issued Books
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {                                         
     jTextArea1.setText("");
        try
        {
            
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection(CONN_STRING,USERNAME,PASSWORD);
            Statement smt=con.createStatement();
            String s1="select * from books";
            ResultSet rs=smt.executeQuery(s1);
           
            
            
            while(rs.next())
            {
                if(rs.getString(2).equals("false"))
                jTextArea1.append(rs.getString(1)+"\n");

               
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"An error occured"+e);
        }
    }                                        

//Return Books
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        String book = JOptionPane.showInputDialog("Enter book name:");
        try
        {
             Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection(CONN_STRING,USERNAME,PASSWORD);
            Statement smt=con.createStatement();
            String s1="select * from books where BookName='"+book+"'";
            ResultSet rs=smt.executeQuery(s1);
           rs.next();
           String date1=rs.getString("IssueDate");
                   String date2=rs.getString("ReturnDate");
                    Date date11=new SimpleDateFormat("dd/MM/yyyy").parse(date1);
                     Date date12=new SimpleDateFormat("dd/MM/yyyy").parse(date2);
            if(rs.getString(2).equals("false"))
            {
                String s2="UPDATE books SET Inbook='true',User='null' WHERE BookName='"+book+"'";
                            smt.executeUpdate(s2);
                            
                   String timeStamp = new SimpleDateFormat("yyyy/MM/dd").format(Calendar.getInstance().getTime());
                             Date currdate=new SimpleDateFormat("yyyy/MM/dd").parse(timeStamp); 
                     if (currdate.compareTo(date12) > 0)
                     {
                      
                         DateTimeFormatter format=DateTimeFormatter.ofPattern("yyyy/MM/dd");
                         LocalDate d1=LocalDate.parse(timeStamp,format);
                         LocalDate d2=LocalDate.parse(date2,format);
                         long diff=ChronoUnit.DAYS.between(d1,d2);
                         int i=(int)diff;
                         int fine=i*5;
                         
                         
                      
                         
                        
                         JOptionPane.showMessageDialog(null,"Your Fine is:"+" "+fine);
                     }
                     else{
                         JOptionPane.showMessageDialog(null,"Books returned to library");
                     }
               
                             }
           
            
            else
            {
                JOptionPane.showMessageDialog(null,book+"is already present in the library");
            }
           
        }
       
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"An error occured"+e);
        }
    
    }                                        

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        System.exit(0);
    }                                        
//Delete Books
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {                                         
       String del=JOptionPane.showInputDialog("Enter Book to be Deleted:");
        try
        {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection(CONN_STRING,USERNAME,PASSWORD);
            Statement smt=con.createStatement();
            String s1="delete from books where BookName='"+del+"';";
            smt.executeUpdate(s1);
            JOptionPane.showMessageDialog(null,del+" removed from library");
        }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,"An error occured"+e);
            }
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LibrarianSec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LibrarianSec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LibrarianSec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LibrarianSec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LibrarianSec().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration                   
}
